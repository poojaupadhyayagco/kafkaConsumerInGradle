buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${property('spring.boot.version')}")
    }
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'kafka-consumer-dashboard'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    implementation "io.confluent:kafka-schema-registry:5.3.0"
    implementation 'io.confluent:kafka-json-schema-serializer:6.1.0'
    implementation 'io.confluent:kafka-schema-registry-client:5.3.0'
    implementation 'io.confluent:kafka-json-schema-serializer:5.5.1'
    implementation("org.springframework.boot:spring-boot-starter:${property('spring.boot.version')}")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${property('spring.boot.version')}")
    implementation("org.springframework.kafka:spring-kafka:${property('spring.kafka.version')}")
    implementation("org.springframework.boot:spring-boot-starter-web:${property('spring.boot.version')}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${property('fasterxml.jackson.version')}")
    implementation("com.fasterxml.jackson.core:jackson-core:${property('fasterxml.jackson.version')}")
    implementation("com.fasterxml.jackson.core:jackson-core:${property('fasterxml.jackson.version')}")
}

configurations.all {
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "log4j", module: "log4j"
}


/*
This replaces any variables surrounded by ${} with Gradle variables in scope.
This includes variables declared in the gradle.properties file.
NOTE:  This conflicts with Spring Boot variable patterns and the workaround
  is to put a '\' in front of the Sprint Boot variables.
*/
processResources {
    expand(project.properties)
}